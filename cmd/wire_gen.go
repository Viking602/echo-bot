// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"echo/internal/app"
	"echo/internal/biz"
	"echo/internal/bot"
	"echo/internal/command"
	"echo/internal/data"
	"echo/internal/service"
	"echo/internal/task"
	"echo/pkg/logger"
)

// Injectors from wire.go:

func wireApp(log *logger.Logger) (*app.App, error) {
	dataData, err := data.NewData()
	if err != nil {
		return nil, err
	}
	botRepo := data.NewBotRepo(dataData)
	botUsecase := biz.NewBotUsecase(botRepo)
	setMasterService := service.NewSetMasterService(botUsecase)
	subBiliLiveRepo := data.NewSubBiliLiveRepo(dataData)
	subBiliLiveUsecase := biz.NewSubBiliLiveUsecase(subBiliLiveRepo)
	subRepo := data.NewSubRepo(dataData)
	subUsecase := biz.NewSubUsecase(subRepo)
	biliLiveAddService := service.NewBiliLiveAddService(subBiliLiveUsecase, subUsecase, log)
	biliLiveDelService := service.NewBiliLiveDelService(subBiliLiveUsecase, subUsecase, log)
	subDouyuLiveRepo := data.NewSubDouyuLiveRepo(dataData)
	subDouyuLiveUsecase := biz.NewSubDouyuLiveUsecase(subDouyuLiveRepo)
	douyuLiveAddService := service.NewDouyuLiveAddService(subDouyuLiveUsecase, subUsecase, log)
	douyuLiveDelService := service.NewDouyuLiveDelService(subDouyuLiveUsecase, subUsecase, log)
	commandRegistry := command.NewInitializedRegistry(setMasterService, biliLiveAddService, biliLiveDelService, douyuLiveAddService, douyuLiveDelService)
	handler := bot.NewBotHandler(commandRegistry, log, botUsecase)
	botBot := bot.NewBot(handler)
	biliTask := task.NewBiliTask(log, handler, subUsecase, subBiliLiveUsecase)
	douyuTask := task.NewDouyuTask(log, handler, subUsecase, subDouyuLiveUsecase)
	taskTask := task.NewTask(log, biliTask, douyuTask)
	appApp := app.NewApp(botBot, taskTask)
	return appApp, nil
}
