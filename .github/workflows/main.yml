name: Build and Push with Release and Binaries

on:
  push:
    tags:
      - 'v*'          # 匹配 v1.0.0 等版本标签
      - 'alpha-*'     # 匹配 alpha-1 等测试标签

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write    # 需要 write 权限以创建 Release 和上传附件
      packages: write    # 需要 write 权限以推送镜像到 GHCR

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 登录到 GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 提取 Docker 元数据
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}  # 提取版本标签，如 v1.0.0 -> 1.0.0
            type=raw,value={{raw}}          # 保留原始标签，如 alpha-1

      - name: 构建并推送 Docker 镜像
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 创建 GitHub Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Automated release for tag ${{ github.ref_name }}.
            Docker image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          draft: false
          prerelease: ${{ startsWith(github.ref_name, 'alpha-') }}

      - name: 设置 Go 环境
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'  # 替换为您项目的 Go 版本

      - name: 构建 Linux/amd64 二进制
        run: |
          GOOS=linux GOARCH=amd64 go build -o echo-bot-linux-amd64
          chmod +x echo-bot-linux-amd64

      - name: 构建 Linux/arm64 二进制
        run: |
          GOOS=linux GOARCH=arm64 go build -o echo-bot-linux-arm64
          chmod +x echo-bot-linux-arm64

      - name: 上传 Linux/amd64 二进制到 Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./echo-bot-linux-amd64
          asset_name: echo-bot-linux-amd64
          asset_content_type: application/octet-stream

      - name: 上传 Linux/arm64 二进制到 Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./echo-bot-linux-arm64
          asset_name: echo-bot-linux-arm64
          asset_content_type: application/octet-stream