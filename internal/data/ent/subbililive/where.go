// Code generated by ent, DO NOT EDIT.

package subbililive

import (
	"echo/internal/data/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldLTE(FieldID, id))
}

// RoomID applies equality check predicate on the "room_id" field. It's identical to RoomIDEQ.
func RoomID(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldEQ(FieldRoomID, v))
}

// LiveState applies equality check predicate on the "live_state" field. It's identical to LiveStateEQ.
func LiveState(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldEQ(FieldLiveState, v))
}

// LiveStartTime applies equality check predicate on the "live_start_time" field. It's identical to LiveStartTimeEQ.
func LiveStartTime(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldEQ(FieldLiveStartTime, v))
}

// LiveEndTime applies equality check predicate on the "live_end_time" field. It's identical to LiveEndTimeEQ.
func LiveEndTime(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldEQ(FieldLiveEndTime, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldEQ(FieldUpdateTime, v))
}

// RoomIDEQ applies the EQ predicate on the "room_id" field.
func RoomIDEQ(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldEQ(FieldRoomID, v))
}

// RoomIDNEQ applies the NEQ predicate on the "room_id" field.
func RoomIDNEQ(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldNEQ(FieldRoomID, v))
}

// RoomIDIn applies the In predicate on the "room_id" field.
func RoomIDIn(vs ...int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldIn(FieldRoomID, vs...))
}

// RoomIDNotIn applies the NotIn predicate on the "room_id" field.
func RoomIDNotIn(vs ...int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldNotIn(FieldRoomID, vs...))
}

// RoomIDGT applies the GT predicate on the "room_id" field.
func RoomIDGT(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldGT(FieldRoomID, v))
}

// RoomIDGTE applies the GTE predicate on the "room_id" field.
func RoomIDGTE(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldGTE(FieldRoomID, v))
}

// RoomIDLT applies the LT predicate on the "room_id" field.
func RoomIDLT(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldLT(FieldRoomID, v))
}

// RoomIDLTE applies the LTE predicate on the "room_id" field.
func RoomIDLTE(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldLTE(FieldRoomID, v))
}

// LiveStateEQ applies the EQ predicate on the "live_state" field.
func LiveStateEQ(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldEQ(FieldLiveState, v))
}

// LiveStateNEQ applies the NEQ predicate on the "live_state" field.
func LiveStateNEQ(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldNEQ(FieldLiveState, v))
}

// LiveStateIn applies the In predicate on the "live_state" field.
func LiveStateIn(vs ...int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldIn(FieldLiveState, vs...))
}

// LiveStateNotIn applies the NotIn predicate on the "live_state" field.
func LiveStateNotIn(vs ...int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldNotIn(FieldLiveState, vs...))
}

// LiveStateGT applies the GT predicate on the "live_state" field.
func LiveStateGT(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldGT(FieldLiveState, v))
}

// LiveStateGTE applies the GTE predicate on the "live_state" field.
func LiveStateGTE(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldGTE(FieldLiveState, v))
}

// LiveStateLT applies the LT predicate on the "live_state" field.
func LiveStateLT(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldLT(FieldLiveState, v))
}

// LiveStateLTE applies the LTE predicate on the "live_state" field.
func LiveStateLTE(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldLTE(FieldLiveState, v))
}

// LiveStartTimeEQ applies the EQ predicate on the "live_start_time" field.
func LiveStartTimeEQ(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldEQ(FieldLiveStartTime, v))
}

// LiveStartTimeNEQ applies the NEQ predicate on the "live_start_time" field.
func LiveStartTimeNEQ(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldNEQ(FieldLiveStartTime, v))
}

// LiveStartTimeIn applies the In predicate on the "live_start_time" field.
func LiveStartTimeIn(vs ...int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldIn(FieldLiveStartTime, vs...))
}

// LiveStartTimeNotIn applies the NotIn predicate on the "live_start_time" field.
func LiveStartTimeNotIn(vs ...int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldNotIn(FieldLiveStartTime, vs...))
}

// LiveStartTimeGT applies the GT predicate on the "live_start_time" field.
func LiveStartTimeGT(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldGT(FieldLiveStartTime, v))
}

// LiveStartTimeGTE applies the GTE predicate on the "live_start_time" field.
func LiveStartTimeGTE(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldGTE(FieldLiveStartTime, v))
}

// LiveStartTimeLT applies the LT predicate on the "live_start_time" field.
func LiveStartTimeLT(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldLT(FieldLiveStartTime, v))
}

// LiveStartTimeLTE applies the LTE predicate on the "live_start_time" field.
func LiveStartTimeLTE(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldLTE(FieldLiveStartTime, v))
}

// LiveEndTimeEQ applies the EQ predicate on the "live_end_time" field.
func LiveEndTimeEQ(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldEQ(FieldLiveEndTime, v))
}

// LiveEndTimeNEQ applies the NEQ predicate on the "live_end_time" field.
func LiveEndTimeNEQ(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldNEQ(FieldLiveEndTime, v))
}

// LiveEndTimeIn applies the In predicate on the "live_end_time" field.
func LiveEndTimeIn(vs ...int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldIn(FieldLiveEndTime, vs...))
}

// LiveEndTimeNotIn applies the NotIn predicate on the "live_end_time" field.
func LiveEndTimeNotIn(vs ...int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldNotIn(FieldLiveEndTime, vs...))
}

// LiveEndTimeGT applies the GT predicate on the "live_end_time" field.
func LiveEndTimeGT(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldGT(FieldLiveEndTime, v))
}

// LiveEndTimeGTE applies the GTE predicate on the "live_end_time" field.
func LiveEndTimeGTE(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldGTE(FieldLiveEndTime, v))
}

// LiveEndTimeLT applies the LT predicate on the "live_end_time" field.
func LiveEndTimeLT(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldLT(FieldLiveEndTime, v))
}

// LiveEndTimeLTE applies the LTE predicate on the "live_end_time" field.
func LiveEndTimeLTE(v int64) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldLTE(FieldLiveEndTime, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.FieldLTE(FieldUpdateTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SubBiliLive) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SubBiliLive) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SubBiliLive) predicate.SubBiliLive {
	return predicate.SubBiliLive(sql.NotPredicates(p))
}
