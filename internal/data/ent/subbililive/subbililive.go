// Code generated by ent, DO NOT EDIT.

package subbililive

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the subbililive type in the database.
	Label = "sub_bili_live"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRoomID holds the string denoting the room_id field in the database.
	FieldRoomID = "room_id"
	// FieldLiveState holds the string denoting the live_state field in the database.
	FieldLiveState = "live_state"
	// FieldLiveStartTime holds the string denoting the live_start_time field in the database.
	FieldLiveStartTime = "live_start_time"
	// FieldLiveEndTime holds the string denoting the live_end_time field in the database.
	FieldLiveEndTime = "live_end_time"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// Table holds the table name of the subbililive in the database.
	Table = "sub_bili_live"
)

// Columns holds all SQL columns for subbililive fields.
var Columns = []string{
	FieldID,
	FieldRoomID,
	FieldLiveState,
	FieldLiveStartTime,
	FieldLiveEndTime,
	FieldCreateTime,
	FieldUpdateTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the SubBiliLive queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByRoomID orders the results by the room_id field.
func ByRoomID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRoomID, opts...).ToFunc()
}

// ByLiveState orders the results by the live_state field.
func ByLiveState(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLiveState, opts...).ToFunc()
}

// ByLiveStartTime orders the results by the live_start_time field.
func ByLiveStartTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLiveStartTime, opts...).ToFunc()
}

// ByLiveEndTime orders the results by the live_end_time field.
func ByLiveEndTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLiveEndTime, opts...).ToFunc()
}

// ByCreateTime orders the results by the create_time field.
func ByCreateTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreateTime, opts...).ToFunc()
}

// ByUpdateTime orders the results by the update_time field.
func ByUpdateTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdateTime, opts...).ToFunc()
}
